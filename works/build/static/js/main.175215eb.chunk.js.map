{"version":3,"sources":["site.config.js","ColorModeSwitcher.js","logo.gif","Logo.js","socials.js","theme.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["module","exports","title","description","lang","siteUrl","googleAnalytic","motto","author","email","name","social","twitter","instagram","github","behance","codepen","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","Logo","filter","src","logoImage","SocialButton","href","children","bg","as","Link","isExternal","Socials","SiteConfig","role","xmlns","viewBox","width","height","fill","d","stroke","strokeWidth","theme","extendTheme","config","initialColorMode","useSystemColorMode","styles","global","body","mode","borderRightColor","borderTopColor","colors","gray","50","100","200","300","400","500","600","700","800","900","App","justifySelf","pos","top","right","p","fontWeight","h","sm","md","templateRows","templateColumns","gap","rowSpan","colSpan","borderRight","className","align","justify","direction","lineHeight","maxW","pl","borderTop","pt","ml","colorScheme","mt","pr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.175215eb.chunk.js","sourcesContent":["module.exports = {\n  title: 'React Js',\n  description: 'React Template',\n  lang: 'tr',\n  siteUrl: 'https://egriboz.com',\n  googleAnalytic: 'UA-2364558-1',\n  motto: 'Design Prototype Code',\n  author: {\n    email: 'egriboz@gmail.com',\n    name: 'Fatih EÄŸriboz'\n  },\n  social: {\n    twitter: 'https://twitter.com/egriboz',\n    instagram: 'https://instagram.com/fatihegriboz',\n    github: 'https://github.com/egriboz',\n    behance: 'https://www.behance.net/egriboz',\n    codepen: 'https://codepen.io/egriboz'\n  }\n}\n","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo.4b474c9f.gif\";","import { useColorModeValue } from '@chakra-ui/color-mode';\nimport { Image } from '@chakra-ui/react';\nimport React from 'react';\nimport logoImage from './logo.gif';\n\nexport function Logo() {\n  const filter = useColorModeValue('invert(0)', 'invert(1)');\n\n  return <Image filter={filter} src={logoImage} />;\n}\n","import SiteConfig from './site.config'\nimport { HStack, Link, IconButton } from '@chakra-ui/react'\n\nfunction SocialButton({ href, children }) {\n  return (\n    <IconButton bg=\"none\" as={Link} isExternal href={href} icon={children} />\n  )\n}\n\nfunction Socials({\n  twitter = false,\n  github = false,\n  instagram = false,\n  behance = false,\n  codepen = false,\n  ...props\n}) {\n  return (\n    <HStack {...props}>\n      {twitter && (\n        <SocialButton href={SiteConfig.social.twitter}>\n          <svg\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            width={20}\n            height={20}\n          >\n            <title>Twitter icon</title>\n            <path\n              fill=\"currentColor\"\n              d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"\n            />\n          </svg>\n        </SocialButton>\n      )}\n      {instagram && (\n        <SocialButton href={SiteConfig.social.instagram}>\n          <svg\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            width={20}\n            height={20}\n          >\n            <title>Instagram icon</title>\n            <path\n              fill=\"currentColor\"\n              d=\"M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z\"\n            />\n          </svg>\n        </SocialButton>\n      )}\n      {github && (\n        <SocialButton href={SiteConfig.social.github}>\n          <svg\n            role=\"img\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            width={20}\n            height={20}\n          >\n            <title>GitHub icon</title>\n            <path\n              fill=\"currentColor\"\n              d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n            />\n          </svg>\n        </SocialButton>\n      )}\n      {behance && (\n        <SocialButton href={SiteConfig.social.behance}>\n          <svg\n            stroke=\"currentColor\"\n            fill=\"currentColor\"\n            strokeWidth=\"0\"\n            viewBox=\"0 0 576 512\"\n            width={20}\n            height={20}\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M232 237.2c31.8-15.2 48.4-38.2 48.4-74 0-70.6-52.6-87.8-113.3-87.8H0v354.4h171.8c64.4 0 124.9-30.9 124.9-102.9 0-44.5-21.1-77.4-64.7-89.7zM77.9 135.9H151c28.1 0 53.4 7.9 53.4 40.5 0 30.1-19.7 42.2-47.5 42.2h-79v-82.7zm83.3 233.7H77.9V272h84.9c34.3 0 56 14.3 56 50.6 0 35.8-25.9 47-57.6 47zm358.5-240.7H376V94h143.7v34.9zM576 305.2c0-75.9-44.4-139.2-124.9-139.2-78.2 0-131.3 58.8-131.3 135.8 0 79.9 50.3 134.7 131.3 134.7 61.3 0 101-27.6 120.1-86.3H509c-6.7 21.9-34.3 33.5-55.7 33.5-41.3 0-63-24.2-63-65.3h185.1c.3-4.2.6-8.7.6-13.2zM390.4 274c2.3-33.7 24.7-54.8 58.5-54.8 35.4 0 53.2 20.8 56.2 54.8H390.4z\"></path>\n          </svg>\n        </SocialButton>\n      )}\n      {codepen && (\n        <SocialButton href={SiteConfig.social.codepen}>\n          <svg\n            stroke=\"currentColor\"\n            fill=\"currentColor\"\n            strokeWidth=\"0\"\n            viewBox=\"0 0 512 512\"\n            width={20}\n            height={20}\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M502.285 159.704l-234-156c-7.987-4.915-16.511-4.96-24.571 0l-234 156C3.714 163.703 0 170.847 0 177.989v155.999c0 7.143 3.714 14.286 9.715 18.286l234 156.022c7.987 4.915 16.511 4.96 24.571 0l234-156.022c6-3.999 9.715-11.143 9.715-18.286V177.989c-.001-7.142-3.715-14.286-9.716-18.285zM278 63.131l172.286 114.858-76.857 51.429L278 165.703V63.131zm-44 0v102.572l-95.429 63.715-76.857-51.429L234 63.131zM44 219.132l55.143 36.857L44 292.846v-73.714zm190 229.715L61.714 333.989l76.857-51.429L234 346.275v102.572zm22-140.858l-77.715-52 77.715-52 77.715 52-77.715 52zm22 140.858V346.275l95.429-63.715 76.857 51.429L278 448.847zm190-156.001l-55.143-36.857L468 219.132v73.714z\"></path>\n          </svg>\n        </SocialButton>\n      )}\n    </HStack>\n  )\n}\n\nexport default Socials\n","import { extendTheme } from '@chakra-ui/react'\nimport { mode } from '@chakra-ui/theme-tools'\n\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false\n}\n\nconst theme = extendTheme({\n  config,\n  styles: {\n    global: (props) => ({\n      body: {\n        color: mode('#131415', '#ffffff')(props),\n        bg: mode('#ffffff', '#131415')(props)\n      },\n      'div.border-color-mode-home-right': {\n        borderRightColor: mode('#dadce0', '#222222')(props)\n      },\n      'div.border-color-mode-home-top': {\n        borderTopColor: mode('#dadce0', '#222222')(props)\n      }\n    })\n  },\n  colors: {\n    gray: {\n      50: '#f2f2f3',\n      100: '#d9d9d9',\n      200: '#bfbfbf',\n      300: '#a5a5a5',\n      400: '#8b8b8b',\n      500: '#727272',\n      600: '#595959',\n      700: '#404040',\n      800: '#262626',\n      900: '#0c0d0d'\n    }\n  }\n})\n\nexport default theme\n","import React from 'react'\nimport {\n  ChakraProvider,\n  Box,\n  Text,\n  Link,\n  Grid,\n  Avatar,\n  Badge,\n  Flex,\n  Heading,\n  GridItem,\n  Button\n} from '@chakra-ui/react'\nimport { ColorModeSwitcher } from './ColorModeSwitcher'\nimport { Logo } from './Logo'\nimport Socials from './socials'\nimport theme from './theme'\n\n// import screenfull from 'screenfull'\nconst App = () => {\n  // function handleClick(event) {\n  //   event.preventDefault()\n  //   screenfull.toggle()\n  //   console.log('djaflkdjsalkj')\n  // }\n  return (\n    <ChakraProvider theme={theme}>\n      <ColorModeSwitcher\n        justifySelf=\"flex-end\"\n        pos=\"absolute\"\n        top=\"10px\"\n        right=\"10px\"\n      />\n\n      <Box pos=\"absolute\">\n        <Heading p=\"15px 0 0 30px\" fontSize=\"1.5em\" fontWeight=\"800\" as=\"h1\">\n          FE\n        </Heading>\n      </Box>\n      <Grid\n        h={{ sm: 'auto', md: '100vh' }}\n        templateRows={{ sm: 'repeat(1, 1fr)', md: 'repeat(3, 1fr)' }}\n        templateColumns={{ sm: 'repeat(1, 1fr)', md: 'repeat(3, 1fr)' }}\n        gap={0}\n      >\n        <GridItem\n          rowSpan={{ sm: '4', md: '4' }}\n          colSpan={{ sm: '1', md: '2' }}\n          borderRight=\"1px\"\n          className=\"border-color-mode-home-right\"\n          pos=\"relative\"\n        >\n          <Flex align=\"center\" height=\"100vh\" justify=\"center\">\n            <Logo />\n          </Flex>\n        </GridItem>\n        <GridItem p=\"20px\" rowSpan={{ sm: '1', md: '3' }}>\n          <Flex\n            align=\"flex-start\"\n            justify=\"center\"\n            direction=\"column\"\n            height=\"100%\"\n            p={{ sm: '0 0 60px', md: '0 0 0 0px' }}\n          >\n            <Text\n              fontSize=\"5.5em\"\n              lineHeight=\"96px\"\n              fontWeight=\"700\"\n              maxW=\"12xl\"\n            >\n              Say\n            </Text>\n            <Text\n              fontSize=\"5.5em\"\n              lineHeight=\"96px\"\n              fontWeight=\"700\"\n              maxW=\"12xl\"\n            >\n              Hello!\n            </Text>\n            <Link pl=\"5px\" href=\"mailto:egriboz@gmail.com\" isExternal>\n              egriboz@gmail.com\n            </Link>\n          </Flex>\n        </GridItem>\n        <GridItem\n          p=\"20px 20px 0px 20px\"\n          rowSpan={{ sm: '1', md: '1' }}\n          borderTop=\"1px\"\n          className=\"border-color-mode-home-top\"\n        >\n          <Flex pt=\"10px\">\n            <Avatar src=\"https://cdn.dribbble.com/users/127500/avatars/normal/95abd06772238d31c5ed208db45aa2d5.jpg\" />\n            <Box ml=\"3\">\n              <Text fontWeight=\"bold\">\n                Fatih EÄŸriboz\n                <Badge ml=\"1\" colorScheme=\"green\"></Badge>\n              </Text>\n              <Text fontSize=\"sm\" align=\"left\">\n                Frontend Developer\n              </Text>\n            </Box>\n          </Flex>\n          <Text\n            mt=\"15px\"\n            pl=\"60px\"\n            pr=\"30px\"\n            fontSize=\"md\"\n            maxW=\"100%\"\n            lineHeight=\"normal\"\n          >\n            I work and play with design and code in hopes of making the kids\n            proud.\n          </Text>\n          <Socials\n            p=\"30px 15px 5px 50px\"\n            twitter\n            instagram\n            github\n            behance\n            codepen\n          />\n        </GridItem>\n      </Grid>\n    </ChakraProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript, theme } from '@chakra-ui/react'\nimport React, { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript\n      initialColorMode={theme.config.initialColorMode}\n      key=\"chakra-ui-no-flash\"\n    />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}